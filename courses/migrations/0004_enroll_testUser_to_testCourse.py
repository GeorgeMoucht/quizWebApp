# Generated by Django 5.1.4 on 2025-01-05 15:52

from django.db import migrations

def enroll_test_user_to_test_course(apps, schema_editor):
    # Get the models dynamically
    User = apps.get_model('auth', 'User')
    Course = apps.get_model('courses', 'Course')
    Enrollment = apps.get_model('courses', 'Enrollment')

    #Retrieve the existing testStudent
    try:
        test_student = User.objects.get(username='testStudent')
    except User.DoesNotExist:
        raise ValueError("User with username 'testStudent does not exists.")
    
    # Retrieve the existing testCourse
    try:
        test_course = Course.objects.get(title='Test Course')
    except Course.DoesNotExist:
        raise ValueError("Course with title 'Test Course' does not exist.")
    
    # Enroll the testStudent in the testCourse
    enrollment, created = Enrollment.objects.get_or_create(
        student_id=test_student,
        course_id=test_course
    )

    if created:
        print(f"Successfully enrolled {test_student.username} into {test_course.title}.")
    else:
        print(f"{test_student.username} is already enrolled in {test_course.title}. Enrollment skipped.")
    

class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0003_create_test_course'),
    ]

    operations = [
        migrations.RunPython(enroll_test_user_to_test_course),
    ]
